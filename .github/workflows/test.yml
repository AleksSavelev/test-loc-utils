on:
  push

jobs:
  update_en_localization:
    environment: update localizations
    runs-on: ubuntu-latest
    env:
      LOC_BOT_NAME: ${{secrets.LOC_BOT_NAME}}
      LOC_BOT_EMAIL: ${{secrets.LOC_BOT_EMAIL}}
      GH_TOKEN: ${{secrets.LOC_TOKEN}}
      APPROVE_BOT_NAME: ${{secrets.APPROVE_BOT_NAME}}
      APPROVE_BOT_EMAIL: ${{secrets.APPROVE_BOT_EMAIL}}
    outputs:
      branch-name: ${{steps.info.outputs.branch}}
      pr-name: ${{steps.info.outputs.pr-name}}
    steps:
      - name: Prepare info
        id: info
        run: |
          echo "::set-output name=branch::$(date +'new-translations_%F_%H-%M-%S')"
          echo "::set-output name=pr-name::$(date +'New translations (%F %T %Z)')"
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.LOC_TOKEN}}
          submodules: recursive
          persist-credentials: true
      - name: Set Loc bot config details
        run: |
          git config --global user.name $LOC_BOT_NAME
          git config --global user.email $LOC_BOT_EMAIL
          git config --global core.autocrlf false
      - uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.GPG_TOKEN }}
          passphrase: ${{ secrets.PASS_PHRASE }}
          git_config_global: true
          git_user_signingkey: true
          git_commit_gpgsign: true
      - name: Update submodules
        run: |
          git checkout -b $BRANCH
          git submodule init
          git submodule update --remote --recursive
        env:
          BRANCH: ${{steps.info.outputs.branch}}
      - name: Copy EN translation
        run: |
          for file in ./visuals/*/stringResources/en-US/resources.resjson; do 
            substring="visuals/"
            location="${file/$substring/localizations/}"
            substring="/stringresources"
            newLocation="${location/$substring//stringResources}"
            cp $file $newLocation;
          done;
      - name: Commit and push changes
        run: |
          changes="$(git diff)"
          if [[ $changes != "" ]]; then
            defaultBranchName=$(git remote show origin | sed -n '/HEAD branch/s/.*: //p')
            git add . && \
              git commit -S -m "New translations" && \
              git push --set-upstream origin $BRANCH && gh pr create -B $defaultBranchName -b "Auto created Pull Request with new translations" -t "$PR_NAME" || \
              echo "New pull request to $repoName wasn't created"
          else
            echo "No changes"
          fi
        env:
          PR_NAME: ${{steps.info.outputs.pr-name}}
          BRANCH: ${{steps.info.outputs.branch}}
  update_translations:
    environment: update localizations
    runs-on: ubuntu-latest
    env: 
      LOC_BOT_NAME: ${{secrets.LOC_BOT_NAME}}
      LOC_BOT_EMAIL: ${{secrets.LOC_BOT_EMAIL}}
      GH_TOKEN: ${{secrets.LOC_TOKEN}}
    outputs:
      branch-name: ${{steps.info.outputs.branch}}
    steps:
      - name: Prepare info
        id: info
        run: |
          echo "::set-output name=branch::$(date +'new-translations_%F_%H-%M-%S')"
          echo "::set-output name=pr-date::$(date +'%F %T %Z')"
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.LOC_TOKEN}}
          submodules: recursive
          persist-credentials: true
      - name: Set Loc bot config details
        run: |
          git config --global user.name $LOC_BOT_NAME
          git config --global user.email $LOC_BOT_EMAIL
          git config --global core.autocrlf false
      - uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.GPG_TOKEN }}
          passphrase: ${{ secrets.PASS_PHRASE }}
          git_config_global: true
          git_user_signingkey: true
          git_commit_gpgsign: true
      - name: Update submodules
        run: |
          git pull --recurse-submodules
          git submodule update --remote --recursive
          mainFolder=$PWD
          for folder in visuals/*; do
            repoName=$(echo $folder| cut -d'/' -f 2)
            echo "::group::Configure $repoName" 
              git -C $folder config remote.origin.fetch +refs/heads/*:refs/remotes/origin/* 
              cd "$mainFolder/$folder"
              git fetch
              git checkout -b $BRANCH
            echo "::endgroup::"
            cd $mainFolder
          done;
        env:
          BRANCH: ${{steps.info.outputs.branch}}
      - name: Copy EN translation
        run: |
          for file in ./visuals/*/stringResources/en-US/resources.resjson; do 
            substring="visuals/"
            location="${file/$substring/localizations/}"
            substring="/stringresources"
            newLocation="${location/$substring//stringResources}"
            cp $file $newLocation;
          done;
      - name: Commit and push changes
        run: git add . && git commit -S -m "New translation" && git push || echo "No changes to commit"
     
